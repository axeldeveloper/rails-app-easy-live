services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   # command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -b '0.0.0.0'"
  #   container_name: ror_app
  #   environment:
  #     - TZ=America/Sao_Paulo
  #     - RAILS_ENV=development
  #     - HISTFILE=/usr/src/app/log/.bash_history
  #   #env_file: .env
  #   volumes:
  #     - .:/myapp
  #   tmpfs: /app/tmp
  #   tty: true
  #   stdin_open: true
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_started

  db:
    image: postgres:15
    container_name: db_easy
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER}
      interval: 2s
      timeout: 5s
      retries: 30

  redis:
    # image: redis/redis-stack-server:7.2.0-v6
    image: redis/redis-stack:latest
    container_name: redis_easy
    ports:
      - 6379:6379
      - 8001:8001
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      #test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "--raw", "incr", "ping" ]
    volumes:
      - redis_data:/data
    env_file:
      - .env
    #environment:
      #- REDIS_PASSWORD=${REDIS_PASSWORD}
      #- REDIS_ARGS=--requirepass ${REDIS_PASSWORD}
      #- REDIS_INSIGHT_USER=${REDIS_INSIGHT_USER}
      #- REDIS_INSIGHT_PASSWORD=${REDIS_INSIGHT_PASSWORD}
      #command: redis-server --requirepass ${REDIS_PASSWORD}

  libretranslate:
    container_name: libretranslate
    image: libretranslate/libretranslate:latest
    ports:
      - "5000:5000"
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', './venv/bin/python scripts/healthcheck.py']
      interval: 10s
      timeout: 4s
      retries: 4
      start_period: 5s
  
  
  # sidekiq:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   container_name: ror_sidekiq
  #   command: bundle exec sidekiq
  #   environment:
  #     - TZ=America/Sao_Paulo
  #   volumes:
  #     - .:/myapp
  #   depends_on:
  #     - redis
  #     - app
  #   env_file: .env
  #   tty: true
  #   stdin_open: true

volumes:
  redis_data:
  pg_data:
  bundle:
